<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.by.blcu.course.dao.ICourseDao">
  <resultMap id="BaseResultMap" type="com.by.blcu.course.dto.Course">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category_one" jdbcType="VARCHAR" property="categoryOne" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="category_two" jdbcType="VARCHAR" property="categoryTwo" />
    <result column="org_code" jdbcType="INTEGER" property="orgCode" />
    <result column="commit_time" jdbcType="TIMESTAMP" property="commitTime" />
    <result column="examine_user" jdbcType="INTEGER" property="examineUser" />
    <result column="examine_time" jdbcType="TIMESTAMP" property="examineTime" />
    <result column="examine_context" jdbcType="VARCHAR" property="examineContext" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="bak1" jdbcType="VARCHAR" property="bak1" />
    <result column="bak2" jdbcType="VARCHAR" property="bak2" />
    <result column="bak3" jdbcType="VARCHAR" property="bak3" />
  </resultMap>
  <sql id="Base_Column_List">
    course_id, name, category_one, status, category_two, org_code, commit_time,examine_user, examine_time,
    examine_context, create_user, create_time, update_user, update_time, bak1, bak2, 
    bak3
  </sql>
  <sql id="BaseWhere">
    	<if test="!@org.springframework.util.StringUtils@isEmpty(entityKeyValues)">
			and course_id in
			<foreach item="item" index="index" collection="entityKeyValues" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(notEntityKeyValues)">
			and course_id not in
			<foreach item="item" index="index" collection="notEntityKeyValues" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(courseId)">
			and course_id=#{courseId,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(name)">
			and name like CONCAT('%',#{name,jdbcType=VARCHAR},'%')
		</if>
        <if test="!@org.springframework.util.StringUtils@isEmpty(nameReal)">
              and name =#{nameReal,jdbcType=VARCHAR}
        </if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(categoryOne)">
			and category_one=#{categoryOne,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(status)">
			and status=#{status,jdbcType=INTEGER}
		</if>
      <if test="!@org.springframework.util.StringUtils@isEmpty(minStatus)">
          and status >=#{minStatus,jdbcType=INTEGER}
      </if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(categoryTwo)">
			and category_two=#{categoryTwo,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(orgCode)">
			and org_Code=#{orgCode,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(examineUser)">
			and examine_user=#{examineUser,jdbcType=INTEGER}
		</if>
        <if test="!@org.springframework.util.StringUtils@isEmpty(commitTime)">
            and commit_time=#{commitTime,jdbcType=TIMESTAMP}
        </if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(examineTime)">
			and examine_time=#{examineTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(examineContext)">
			and examine_context=#{examineContext,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(createUser)">
			and create_user=#{createUser,jdbcType=INTEGER}
		</if>
          <if test="!@org.springframework.util.StringUtils@isEmpty(createUsers)">
              and course_id in
              <foreach item="item" index="index" collection="createUsers" open="(" separator="," close=")">
                  #{item}
              </foreach>
          </if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(createTime)">
			and create_time=#{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(updateUser)">
			and update_user=#{updateUser,jdbcType=INTEGER}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(updateTime)">
			and update_time=#{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(bak1)">
			and bak1=#{bak1,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(bak2)">
			and bak2=#{bak2,jdbcType=VARCHAR}
		</if>
		<if test="!@org.springframework.util.StringUtils@isEmpty(bak3)">
			and bak3=#{bak3,jdbcType=VARCHAR}
		</if>
        <if test="true">
            and delete_at is null
        </if>

  </sql>
  <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Long">
    	select count(1) from course
		<where>
			<include refid="BaseWhere" />
		</where>
  </select>
  <select id="selectList" parameterType="java.util.Map" resultMap="BaseResultMap">
    	select
		<include refid="Base_Column_List"/> 
		from course
		<where>
			<include refid="BaseWhere"/>
		</where>
		<include refid="com.blcu.common.orderSqlMap" /> 
		<include refid="com.blcu.common.pageSqlMap" /> 
  </select>
  <delete id="deleteByParams" parameterType="java.util.Map">
    	delete from course
		<where>
			<include refid="BaseWhere"/>
		</where>
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.by.blcu.course.dto.Course">
    insert into course (course_id, name, category_one, 
      status, category_two, org_code,commit_time,
      examine_user, examine_time, examine_context, 
      create_user, create_time, update_user, 
      update_time, bak1, bak2, 
      bak3)
    values (#{courseId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{categoryOne,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{categoryTwo,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR},#{commitTime,jdbcType=TIMESTAMP},
      #{examineUser,jdbcType=INTEGER}, #{examineTime,jdbcType=TIMESTAMP}, #{examineContext,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.by.blcu.course.dto.Course"
          useGeneratedKeys="true"  keyProperty="courseId">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="categoryOne != null">
        category_one,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="categoryTwo != null">
        category_two,
      </if>
      <if test="orgCode != null">
        org_Code,
      </if>
      <if test="commitTime != null">
          commit_time,
      </if>
      <if test="examineUser != null">
        examine_user,
      </if>
      <if test="examineTime != null">
        examine_time,
      </if>
      <if test="examineContext != null">
        examine_context,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="bak1 != null">
        bak1,
      </if>
      <if test="bak2 != null">
        bak2,
      </if>
      <if test="bak3 != null">
        bak3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryOne != null">
        #{categoryOne,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="categoryTwo != null">
        #{categoryTwo,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="commitTime != null">
        #{commitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examineUser != null">
        #{examineUser,jdbcType=INTEGER},
      </if>
      <if test="examineTime != null">
        #{examineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examineContext != null">
        #{examineContext,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null">
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        #{bak3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.by.blcu.course.dto.Course">
    update course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryOne != null">
        category_one = #{categoryOne,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="categoryTwo != null">
        category_two = #{categoryTwo,jdbcType=VARCHAR},
      </if>
      <if test="orgCode != null">
        org_Code = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="commitTime != null">
          commit_time = #{commitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examineUser != null">
        examine_user = #{examineUser,jdbcType=INTEGER},
      </if>
      <if test="examineTime != null">
        examine_time = #{examineTime,jdbcType=TIMESTAMP},
      </if>
      <if test="examineContext != null">
        examine_context = #{examineContext,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bak1 != null">
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null">
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null">
        bak3 = #{bak3,jdbcType=VARCHAR},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.by.blcu.course.dto.Course">
    update course
    set name = #{name,jdbcType=VARCHAR},
      category_one = #{categoryOne,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      category_two = #{categoryTwo,jdbcType=VARCHAR},
      org_Code = #{orgCode,jdbcType=VARCHAR},
      commit_time = #{commitTime,jdbcType=TIMESTAMP},
      examine_user = #{examineUser,jdbcType=INTEGER},
      examine_time = #{examineTime,jdbcType=TIMESTAMP},
      examine_context = #{examineContext,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR},
      bak3 = #{bak3,jdbcType=VARCHAR}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
    <update id="logicDeleteByPrimaryKey" parameterType="java.lang.Integer">
        update course
        set delete_at = sysdate()
        where course_id = #{courseId,jdbcType=INTEGER}
    </update>
</mapper>